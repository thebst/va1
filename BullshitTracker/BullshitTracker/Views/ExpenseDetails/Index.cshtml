@model IEnumerable<BullshitTracker.Models.Transactions_All>

@{
    ViewBag.Title = "Expenses";
}

<h2>Expenses</h2>


<style>
    table {
        width: 100%;
        table-layout: fixed;
    }

    td {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel panel-info">
        <div class="panel-heading">Filteroo</div>
        <br />
        <div class="form-horizontal">

            <div class="form-group">
                <label class="control-label col-md-2">Budget:</label>

                <div class="col-md-10">
                    @Html.DropDownList("Budget",null ,"All Budgets", new {style ="width:200px" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Category:</label>

                <div class="col-md-10">
                    @Html.DropDownList("Category",null, "All Categories", new { style = "width:200px" })
                </div>

            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Period:</label>

                <div class="col-md-10">
                    @Html.DropDownList("Period", null, "All Periods", new { style = "width:200px" })
                </div>

            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Filter" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}


<div class="visible-xs">
    @foreach (var item in Model)
    {
        <div class="panel panel-default">
            <div class="panel-heading" style="font-weight:bold">
                @Html.ActionLink(item.Description, "Details", "Transactions", new { Id = item.TransactionId }, null)
            </div>
            <ul class="list-group">
                <li class="list-group-item">
                    @Html.DisplayFor(modelItem => item.TransactionDate)
                </li>

                <li class="list-group-item" style="font-weight:bold">
                    @Html.DisplayFor(modelItem => item.ActualAmount)
                </li>

                <li class="list-group-item">
                    @Html.DisplayFor(modelItem => item.VendorName)
                </li>

                <li class="list-group-item">
                    @Html.DisplayFor(modelItem => item.BudgetName) → @Html.DisplayFor(modelItem => item.CategoryName)
                </li>

            </ul>
        </div>
    }
</div>



<table class="table hidden-xs">

    <colgroup>
        <col width="250" />
        <col width="100" />
        <col width="150" />
        <col width="150" />
        <col width="150" />
        <col width="100" />


    </colgroup>

    <tr>


        <th>
            Description
        </th>
        <th>
            Date
        </th>
        <th>
            Merchant
        </th>
        <th>
            Category
        </th>
        <th>
            Budget
        </th>
        <th style="text-align:right">
            Amount
        </th>

    </tr>

    @foreach (var item in Model)
    {
        <tr>



            <td>
                @Html.ActionLink(item.Description, "Details", "Transactions", new { Id = item.TransactionId }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TransactionDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VendorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.BudgetName)
            </td>
            <td style="text-align:right; font-weight:bold">

                @Html.DisplayFor(modelItem => item.ActualAmount)
            </td>


        </tr>
    }

</table>


@section scripts {
    
<script type="text/javascript">
    $('#Budget').change(function () {
        var selectedBudget = $(this).val();
        if (selectedBudget != null && selectedBudget != '') {
            $.getJSON('@Url.Action("Categoryxs")', { Budget: selectedBudget }, function (data) {
                var categorySelect = $('#Category');
                categorySelect.empty();
                categorySelect.append($('<option/>', {value: -1, text:'All Categories'}));

                $.each(data.result, function (index, item) {
                    categorySelect.append($('<option/>', {
                        value: item.Id,
                        text: item.Name
                    }));
                });
            });
        }
    });
</script>
    }
